server:
  port: 8084

spring:
  application:
    name: inventory-service

  datasource:
    url: ${INVENTORY_SERVICE_DATASOURCE_URL:jdbc:postgresql://localhost:5435/inventory_service_db}
    username: ${INVENTORY_SERVICE_DB_USERNAME:inventory_service_user}
    password: ${INVENTORY_SERVICE_DB_PASSWORD:inventory_service_password}
    driver-class-name: org.postgresql.Driver

  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        format_sql: true

  kafka:
    bootstrap-servers: kafka:9092

    producer:
      key-serializer: org.apache.kafka.common.serialization.UUIDSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer

    consumer:
      group-id: inventory-service-group
      key-deserializer: org.apache.kafka.common.serialization.UUIDDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer

kafka:
  topic:
    productCreated: product.product.created
    stockStatusUpdated: inventory.stock.status-updated

    orderCreationFailed: order.order.creation-failed
    orderConfirmationFailed: order.order.confirmation-failed
    orderCancelled: order.order.cancelled
    orderExpired: order.order.expired

logging:
  level:
    com.ecommerce.inventory_service: DEBUG