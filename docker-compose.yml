services:

  gateway-service:
    image: gateway-service
    build: gateway-service
    container_name: gateway-service
    ports:
      - "8081:8081"
    env_file:
      - .env
    volumes:
      - ./gateway-service:/workspace

  user-service:
    image: user-service
    build: user-service
    container_name: user-service
    volumes:
      - ./user-service:/workspace
    ports:
      - "8080:8080"
    env_file:
      - .env
    depends_on:
      - user-service-db
      - kafka

  user-service-db:
    image: postgres:13
    container_name: user-service-db
    environment:
      - POSTGRES_USER= ${USER_SERVICE_DB_USERNAME}
      - POSTGRES_PASSWORD=${USER_SERVICE_DB_PASSWORD}
      - POSTGRES_DB=${USER_SERVICE_DB}
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data

  product-service:
    image: product-service
    build: product-service
    container_name: product-service
    volumes:
      - ./product-service:/workspace
    ports:
      - "8082:8082"
    env_file:
      - .env
    depends_on:
      - product-service-db
      - kafka

  product-service-db:
    image: postgres:13
    container_name: product-service-db
    environment:
      - POSTGRES_USER=${PRODUCT_SERVICE_DB_USERNAME}
      - POSTGRES_PASSWORD=${PRODUCT_SERVICE_DB_PASSWORD}
      - POSTGRES_DB=${PRODUCT_SERVICE_DB}
    ports:
      - "5433:5432"
    volumes:
      - postgres-data-product:/var/lib/postgresql/data

  catalog-service:
    image: catalog-service
    build: catalog-service
    container_name: catalog-service
    volumes:
      - ./catalog-service:/workspace
    ports:
      - "8083:8083"
    env_file:
      - .env
    depends_on:
      - catalog-service-db
      - kafka

  catalog-service-db:
    image:  postgres:13
    container_name: catalog-service-db
    environment:
      - POSTGRES_USER=${CATALOG_SERVICE_DB_USERNAME}
      - POSTGRES_PASSWORD=${CATALOG_SERVICE_DB_PASSWORD}
      - POSTGRES_DB=${CATALOG_SERVICE_DB}
    ports:
      - "5434:5432"
    volumes:
      - postgres-data-catalog:/var/lib/postgresql/data

  inventory-service:
    image: inventory-service
    build: inventory-service
    container_name: inventory-service
    volumes:
      - ./inventory-service:/workspace
    ports:
      - "8084:8084"
    env_file:
      - .env
    depends_on:
      - inventory-service-db
      - kafka

  inventory-service-db:
    image: postgres:13
    container_name: inventory-service-db
    environment:
      - POSTGRES_USER=${INVENTORY_SERVICE_DB_USERNAME}
      - POSTGRES_PASSWORD=${INVENTORY_SERVICE_DB_PASSWORD}
      - POSTGRES_DB=${INVENTORY_SERVICE_DB}
    ports:
        - "5435:5432"
    volumes:
      - postgres-data-inventory:/var/lib/postgresql/data

  cart-service:
    image: cart-service
    build: cart-service
    container_name: cart-service
    volumes:
      - ./cart-service:/workspace
    ports:
      - "8085:8085"
    env_file:
      - .env
    depends_on:
      - cart-service-db
      - cart-service-cache
      - kafka

  cart-service-db:
    image: postgres:13
    container_name: cart-service-db
    environment:
      - POSTGRES_USER=${CART_SERVICE_DB_USERNAME}
      - POSTGRES_PASSWORD=${CART_SERVICE_DB_PASSWORD}
      - POSTGRES_DB=${CART_SERVICE_DB}
    ports:
      - "5436:5432"
    volumes:
      - postgres-data-cart:/var/lib/postgresql/data

  cart-service-cache:
    image: redis:8.0.2
    container_name: cart-service-cache
    ports:
      - "6379:6379"
    volumes:
      - redis-data-cart:/data

  order-service:
    image: order-service
    build: order-service
    container_name: order-service
    volumes:
      - ./order-service:/workspace
    ports:
      - "8086:8086"
    env_file:
      - .env
    depends_on:
      - order-service-db
      - kafka

  order-service-db:
    image: postgres:13
    container_name: order-service-db
    environment:
      - POSTGRES_USER=${ORDER_SERVICE_DB_USERNAME}
      - POSTGRES_PASSWORD=${ORDER_SERVICE_DB_PASSWORD}
      - POSTGRES_DB=${ORDER_SERVICE_DB}
    ports:
      - "5437:5432"
    volumes:
      - postgres-data-order:/var/lib/postgresql/data

  kafka:
    image: bitnami/kafka:4.0.0
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      - KAFKA_ENABLE_KRAFT=yes
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka:9093
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_KRAFT_CLUSTER_ID=kraft-cluster-1
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
    volumes:
      - kafka_data:/bitnami/kafka

volumes:
  postgres-data:
  postgres-data-product:
  postgres-data-catalog:
  postgres-data-inventory:
  postgres-data-cart:
  postgres-data-order:
  kafka_data:
  redis-data-cart: